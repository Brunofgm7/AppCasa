{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\ProjetoCasa\\\\frontend\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport 'antd/dist/antd.css';\nimport '../styles/index.css';\nimport { Form, Input, Tooltip, Checkbox, Button } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 6\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 6\n    }\n  }\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      nickname: '',\n      residence: '',\n      phone: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    console.log(this.state);\n  } // Get input\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    console.log(this.setState);\n  } // Submit register info\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const request = {\n      email: this.state.email,\n      password: this.state.password,\n      nickname: this.state.nickname,\n      residence: this.state.residence,\n      phone: this.state.phone\n    }; //call axios\n\n    axios.post('http://localhost:3000/api/register', request, {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        this.props.history.push('/');\n      } else {\n        const error = new Error(res.error);\n        throw error;\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  } // Render register form\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n      //form={form}\n      name: \"register\",\n      className: \"register-form\" //onFinish={onFinish}\n      ,\n      scrollToFirstError: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      type: \"password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"nickname\",\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, \"Nickname\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"What do you want others to call you?\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(QuestionCircleOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }\n      }))),\n      rules: [{\n        required: true,\n        message: 'Please input your nickname!',\n        whitespace: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"nickname\",\n      type: \"text\",\n      value: this.state.nickname,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"residence\",\n      label: \"Habitual Residence\",\n      rules: [{\n        required: true,\n        message: 'Please select your habitual residence!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"residence\",\n      type: \"text\",\n      value: this.state.residence,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"phone\",\n      label: \"Phone Number\",\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"phone\",\n      type: \"text\",\n      value: this.state.phone,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({\n      name: \"agreement\",\n      valuePropName: \"checked\",\n      rules: [{\n        validator: (_, value) => value ? Promise.resolve() : Promise.reject('Should accept agreement')\n      }]\n    }, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, \"I have read the \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:5000/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, \"agreement\"))), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }, \"Register\"), \"Already have an account?\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 35\n      }\n    }, \" Sign In\"))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Projetos/ProjetoCasa/frontend/src/components/Register.js"],"names":["React","Component","Link","axios","Form","Input","Tooltip","Checkbox","Button","QuestionCircleOutlined","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Register","constructor","props","state","email","password","nickname","residence","phone","handleChange","bind","handleSubmit","console","log","event","setState","target","name","value","preventDefault","request","post","method","body","JSON","stringify","headers","then","res","status","history","push","error","Error","catch","err","render","type","message","required","getFieldValue","validator","rule","Promise","resolve","reject","whitespace","_"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport 'antd/dist/antd.css';\r\nimport '../styles/index.css';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Checkbox,\r\n  Button,\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 6,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 6,\r\n    },\r\n  },\r\n};\r\n\r\nclass Register extends Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email:'',\r\n      password: '',\r\n      nickname: '',\r\n      residence: '',\r\n      phone: '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    console.log(this.state);\r\n  }\r\n\r\n  // Get input\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]: event.target.value,\r\n    });\r\n    console.log(this.setState)\r\n  }\r\n\r\n  // Submit register info\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const request = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      nickname: this.state.nickname,\r\n      residence: this.state.residence,\r\n      phone: this.state.phone,\r\n    };\r\n    //call axios\r\n    axios.post('http://localhost:3000/api/register', request,  {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n      if (res.status === 200) {\r\n        this.props.history.push('/');\r\n      } else {\r\n        const error = new Error(res.error);\r\n        throw error;\r\n      }\r\n    })\r\n    .catch( err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  // Render register form\r\n  render() {\r\n    return (\r\n      <div className=\"box\">\r\n        <p className=\"title\">Register</p>\r\n        <Form\r\n        {...formItemLayout}\r\n        //form={form}\r\n        name=\"register\"\r\n        className=\"register-form\"\r\n        //onFinish={onFinish}\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"E-mail\"\r\n          rules={[\r\n            {\r\n              type: 'email',\r\n              message: 'The input is not valid E-mail!',\r\n            },\r\n            {\r\n              required: true,\r\n              message: 'Please input your E-mail!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input type=\"text\" name=\"email\"  value={this.state.email} onChange={this.handleChange}/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your password!',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password type=\"password\" name=\"password\"  value={this.state.password} onChange={this.handleChange}/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please confirm your password!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n\r\n                return Promise.reject('The two passwords that you entered do not match!');\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password type=\"password\" name=\"password\"/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"nickname\"\r\n          label={\r\n            <span>\r\n              Nickname&nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                <QuestionCircleOutlined />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your nickname!',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input name=\"nickname\" type=\"text\" value={this.state.nickname} onChange={this.handleChange}/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"residence\"\r\n          label=\"Habitual Residence\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please select your habitual residence!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input name=\"residence\" type=\"text\" value={this.state.residence} onChange={this.handleChange}/>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"phone\"\r\n          label=\"Phone Number\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your phone number!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            name=\"phone\"\r\n            type=\"text\"\r\n            value={this.state.phone} onChange={this.handleChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"agreement\"\r\n          valuePropName=\"checked\"\r\n          rules={[\r\n            {\r\n              validator: (_, value) =>\r\n                value ? Promise.resolve() : Promise.reject('Should accept agreement'),\r\n            },\r\n          ]}\r\n          {...tailFormItemLayout}\r\n        >\r\n          <Checkbox>\r\n            I have read the <a href=\"http://localhost:5000/\">agreement</a>\r\n          </Checkbox>\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.handleSubmit}>\r\n            Register\r\n          </Button>\r\n          Already have an account?<Link to=\"/login\"> Sign In</Link>\r\n        </Form.Item>\r\n      </Form></div>\r\n    );\r\n  };\r\n}  \r\nexport default Register;\r\n\r\n"]},"metadata":{},"sourceType":"module"}