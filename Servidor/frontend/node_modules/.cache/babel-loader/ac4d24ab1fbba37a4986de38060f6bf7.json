{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\ProjetoCasa\\\\frontend\\\\src\\\\components\\\\ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../styles/App.css'; //import Cookies from 'js-cookie';\n\nimport 'antd/dist/antd.css';\nimport '../styles/index.css';\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nclass ForgotPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clear = () => {\n      this.setState({\n        email: \"\"\n      });\n    };\n\n    this.state = {\n      email: '',\n      showError: false,\n      serverMsg: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    console.log(this.state);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } // Submit the email to reset password\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const request = {\n      email: this.state.email\n    };\n    console.log(\"handleSubmit email: \", request); // If empty field\n\n    if (request === '') {\n      this.setState({\n        showError: false,\n        serverMsg: ''\n      });\n    } else {\n      axios.post('http://localhost:3000/api/forgotpassword', request, {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('Data from Reset form: ', response.data.message);\n\n        if (response.data.message === 'Email does not exists') {\n          this.setState({\n            showError: true,\n            serverMsg: ''\n          });\n        } else if (response.data.message === 'Recovery email sent') {\n          this.setState({\n            showError: false,\n            serverMsg: \"Recovery email sent\"\n          });\n        }\n      }).catch(error => {\n        console.log(error.data);\n      });\n    }\n  } //Clean form after submit\n\n\n  //Reset password form\n  render() {\n    const {\n      serverMsg,\n      showNullError,\n      showError\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Reset Password\"), /*#__PURE__*/React.createElement(Form, {\n      name: \"normal_login\",\n      className: \"login-form\",\n      initialValues: {\n        remember: true\n      } //onFinish={onFinish}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4 text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"No worries! Just enter your email and we'll send you a reset password link.\")), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Please input your Email!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 26\n        }\n      }),\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Reset Password\")), showNullError && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Please insert a valid email.\")), showError && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"That email address isn't recongnized. Please try again or register for a new account.\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/register`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Register\"))), serverMsg === 'Recovery email sent' && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Please check your email.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Just remembered?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"\",\n      href: \"http://localhost:5000/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }\n    }, \"Sign In\")))));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["C:/Projetos/ProjetoCasa/frontend/src/components/ForgotPassword.js"],"names":["React","Component","axios","Form","Input","Button","UserOutlined","Link","ForgotPassword","constructor","props","clear","setState","email","state","showError","serverMsg","handleChange","bind","handleSubmit","console","log","event","target","name","value","preventDefault","request","post","method","body","JSON","stringify","headers","then","response","data","message","catch","error","render","showNullError","remember","required"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP,C,CACA;;AACA,OAAO,oBAAP;AACA,OAAO,qBAAP;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AACvCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2DjBC,KA3DiB,GA2DT,MAAK;AACX,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE;AADK,OAAd;AAGD,KA/DgB;;AAEf,SAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAC,EADK;AAEXE,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACD;;AAEDG,EAAAA,YAAY,CAACK,KAAD,EAAQ;AAClB,SAAKV,QAAL,CAAc;AAAC,OAACU,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAAnC,KAAd;AAED,GAhBoC,CAkBrC;;;AACAN,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACI,cAAN;AACA,UAAMC,OAAO,GAAG;AACdd,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AADJ,KAAhB;AAGAO,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCM,OAApC,EALkB,CAMlB;;AACA,QAAIA,OAAO,KAAK,EAAhB,EAAoB;AAClB,WAAKf,QAAL,CAAc;AACZG,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KALD,MAKO;AACPd,MAAAA,KAAK,CAAC0B,IAAN,CAAW,0CAAX,EAAuDD,OAAvD,EAAiE;AAC/DE,QAAAA,MAAM,EAAE,MADuD;AAE/DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKlB,KAApB,CAFyD;AAG/DmB,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHsD,OAAjE,EAOCC,IAPD,CAOMC,QAAQ,IAAI;AAChBf,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCc,QAAQ,CAACC,IAAT,CAAcC,OAApD;;AACA,YAAIF,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,uBAA9B,EAAuD;AACrD,eAAKzB,QAAL,CAAc;AACZG,YAAAA,SAAS,EAAE,IADC;AAEZC,YAAAA,SAAS,EAAE;AAFC,WAAd;AAID,SALD,MAKO,IAAImB,QAAQ,CAACC,IAAT,CAAcC,OAAd,KAA0B,qBAA9B,EAAqD;AAC1D,eAAKzB,QAAL,CAAc;AACZG,YAAAA,SAAS,EAAE,KADC;AAEZC,YAAAA,SAAS,EAAE;AAFC,WAAd;AAID;AACA,OApBH,EAqBGsB,KArBH,CAqBSC,KAAK,IAAI;AACdnB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAK,CAACH,IAAlB;AACD,OAvBH;AAwBC;AACF,GAzDoC,CA2DrC;;;AAOA;AACAI,EAAAA,MAAM,GAAG;AACP,UAAM;AAACxB,MAAAA,SAAD;AAAYyB,MAAAA,aAAZ;AAA2B1B,MAAAA;AAA3B,QAAwC,KAAKD,KAAnD;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,IAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,aAAa,EAAE;AACb4B,QAAAA,QAAQ,EAAE;AADG,OAHjB,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAM,MAAA,SAAS,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qFADA,CARF,eAWE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEC,QAAAA,QAAQ,EAAE,IADZ;AAEEN,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASA,oBAAC,KAAD;AAAO,MAAA,MAAM,eAAE,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC,qBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AAAiE,MAAA,IAAI,EAAC,MAAtE;AAA6E,MAAA,IAAI,EAAC,OAAlF;AAA0F,MAAA,WAAW,EAAC,OAAtG;AAA+G,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWD,KAAjI;AAAwI,MAAA,QAAQ,EAAE,KAAKI,YAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CAXF,eAsBE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,SAAS,EAAC,mBAAnD;AAAuE,MAAA,OAAO,EAAE,KAAKE,YAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAtBF,EA2BGsB,aAAa,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CA5BJ,EAkCG1B,SAAS,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADF,eAIE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,SAAS,EAAC,mBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAJF,CAnCJ,EA4CGC,SAAS,KAAK,qBAAd,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,CA7CJ,eAiDE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAG,MAAA,SAAS,EAAC,EAAb;AAAgB,MAAA,IAAI,EAAC,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAH,CAFF,CAjDF,CAFF,CADF;AA6DD;;AAlIoC;;AAoIvC,eAAeR,cAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/App.css';\r\n//import Cookies from 'js-cookie';\r\nimport 'antd/dist/antd.css';\r\nimport '../styles/index.css';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ForgotPassword extends Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email:'',\r\n      showError: false, \r\n      serverMsg: ''\r\n      };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    console.log(this.state);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  // Submit the email to reset password\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const request = {\r\n      email: this.state.email,\r\n    };\r\n    console.log(\"handleSubmit email: \", request)\r\n    // If empty field\r\n    if (request === '') {\r\n      this.setState({\r\n        showError: false, \r\n        serverMsg: ''\r\n      })\r\n    } else {\r\n    axios.post('http://localhost:3000/api/forgotpassword', request,  {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(response => {\r\n      console.log('Data from Reset form: ', response.data.message)\r\n      if (response.data.message === 'Email does not exists') {\r\n        this.setState({\r\n          showError: true, \r\n          serverMsg: ''\r\n        })\r\n      } else if (response.data.message === 'Recovery email sent') {\r\n        this.setState({\r\n          showError: false,\r\n          serverMsg: \"Recovery email sent\"\r\n        })\r\n      }\r\n      })\r\n      .catch(error => {\r\n        console.log(error.data)\r\n      })\r\n    }\r\n  }\r\n\r\n  //Clean form after submit\r\n  clear = () =>{\r\n    this.setState({\r\n      email: \"\"\r\n    });\r\n  }\r\n\r\n  //Reset password form\r\n  render() {\r\n    const {serverMsg, showNullError, showError} = this.state;\r\n    return (\r\n      <div className=\"box\">\r\n        <p className=\"title\">Reset Password</p>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          //onFinish={onFinish}\r\n          >\r\n          <div className=\"mb-4 text-center\">\r\n          <span className=\"\">No worries! Just enter your email and we'll send you a reset password link.</span>\r\n          </div>\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your Email!',\r\n              },\r\n            ]}\r\n          >\r\n          <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} type=\"text\" name=\"email\" placeholder=\"Email\"  value={this.state.email} onChange={this.handleChange}/>\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.handleSubmit}>\r\n              Reset Password\r\n            </Button>\r\n          </Form.Item>\r\n          {showNullError && (\r\n            <div>\r\n              <p>\r\n                Please insert a valid email.\r\n              </p>\r\n            </div>\r\n          )}\r\n          {showError && (\r\n            <div>\r\n              <p>\r\n                That email address isn't recongnized. Please try again or register for a new account.\r\n              </p>\r\n              <Link to={`/register`}>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Register</Button>\r\n              </Link>\r\n            </div>\r\n          )}\r\n          {serverMsg === 'Recovery email sent' && (\r\n            <div>\r\n              <p>Please check your email.</p>\r\n            </div>\r\n          )}\r\n          <div className=\"text-center\">\r\n            <span>Just remembered?</span>\r\n            <p><a className=\"\" href=\"http://localhost:5000/login\">\r\n                Sign In\r\n            </a></p>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    );\r\n  };\r\n}  \r\nexport default ForgotPassword;\r\n\r\n"]},"metadata":{},"sourceType":"module"}