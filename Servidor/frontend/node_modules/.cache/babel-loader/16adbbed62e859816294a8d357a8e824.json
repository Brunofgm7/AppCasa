{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\ProjetoCasa\\\\frontend\\\\src\\\\components\\\\ResetPassword.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Input, Button } from 'antd';\nimport { LockOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport '../styles/index.css';\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleConfirmPassword = () => {\n      if (this.state.password !== this.state.confirmPassword) {\n        this.setState({\n          password: '',\n          confirmPassword: ''\n        });\n        alert(\"passwords dont match\");\n      }\n    };\n\n    this.clear = () => {\n      this.setState({\n        email: \"\"\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      update: false,\n      isLoading: true,\n      error: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.updatePassword = this.updatePassword.bind(this);\n    console.log(this.state);\n  } // Validate password recovery link\n\n\n  async componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    await axios.get(`http://localhost:3000/api/reset/${params.resetPasswordToken}`).then(response => {\n      console.log(\"reset response: \", response);\n\n      if (response.data.message === 'password reset link working') {\n        this.setState({\n          email: response.data.email,\n          updated: false,\n          isLoading: false,\n          error: false\n        });\n      } else {\n        this.setState({\n          update: false,\n          isLoading: false,\n          error: false\n        });\n      }\n    }).catch(error => {\n      console.log(error.data);\n    });\n  } // Get input (new password and confirm password)\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  } // Compare password and password confirmation\n\n\n  // Submit and update password\n  updatePassword(event) {\n    event.preventDefault();\n    axios.put('http://localhost:3000/api/updatePassword', {\n      email: this.state.email,\n      password: this.state.password\n    }).then(response => {\n      console.log('Data from Update Password: ', response.data.message);\n\n      if (response.data.message === 'Password updated') {\n        this.setState({\n          updated: true,\n          error: false\n        });\n      } else {\n        this.setState({\n          updated: false,\n          error: true\n        });\n      }\n    }).catch(error => {\n      console.log(error.data);\n    });\n  } //Clean form after submit\n\n\n  // Render password reset form\n  render() {\n    const {\n      password,\n      confirmPassword,\n      error,\n      isLoading,\n      updated\n    } = this.state;\n    /* Password not updated' */\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }\n      }, \"Password Reset\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, \"Problem reseting password. Please try again.\"), /*#__PURE__*/React.createElement(Link, {\n        to: `/resetpassword`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, \"Reset Password\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"\",\n        href: \"http://localhost:5000/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 24\n        }\n      }, \"Sign In\"))));\n    } else if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, \"Password Reset\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, \"Loading User Data...\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, \"Reset Password\"), /*#__PURE__*/React.createElement(Form, {\n        name: \"normal_login\",\n        className: \"login-form\",\n        initialValues: {\n          remember: true\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-4 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, \"Please insert the new password\")), /*#__PURE__*/React.createElement(Form.Item, {\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n          className: \"site-form-item-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 26\n          }\n        }),\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"New Password\",\n        value: password,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Form.Item, {\n        name: \"confirmPassword\",\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n          className: \"site-form-item-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 26\n          }\n        }),\n        type: \"password\",\n        name: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        onClick: this.updatePassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, \"UpdatePassword\")), updated && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, \"Your password has been successfully reset, please try logging in again\"), /*#__PURE__*/React.createElement(Link, {\n        to: `/login`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, \"Login\")))));\n    }\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["C:/Projetos/ProjetoCasa/frontend/src/components/ResetPassword.js"],"names":["React","Component","axios","Form","Input","Button","LockOutlined","Link","ResetPassword","constructor","props","handleConfirmPassword","state","password","confirmPassword","setState","alert","clear","email","update","isLoading","error","handleChange","bind","updatePassword","console","log","componentDidMount","match","params","get","resetPasswordToken","then","response","data","message","updated","catch","event","target","name","value","preventDefault","put","render","remember","required"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { LockOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/index.css';\r\n\r\nclass ResetPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          email:'',\r\n          password: '',\r\n          confirmPassword: '',\r\n          update: false,\r\n          isLoading: true, \r\n          error: false,\r\n          };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.updatePassword = this.updatePassword.bind(this);\r\n        console.log(this.state);\r\n      }\r\n\r\n  // Validate password recovery link\r\n  async componentDidMount() {\r\n    const { match: { params } } = this.props;\r\n      await axios.get(`http://localhost:3000/api/reset/${params.resetPasswordToken}`)\r\n        .then(response => {\r\n            console.log(\"reset response: \", response)\r\n            if(response.data.message === 'password reset link working') {\r\n                this.setState({\r\n                    email: response.data.email,\r\n                    updated: false,\r\n                    isLoading: false,\r\n                    error: false\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    update: false,\r\n                    isLoading: false,\r\n                    error: false\r\n                })\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error.data)\r\n        })\r\n      }\r\n\r\n  // Get input (new password and confirm password)\r\n  handleChange(event) {\r\n    this.setState({[event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  // Compare password and password confirmation\r\n  handleConfirmPassword = () => {\r\n    if (this.state.password !== this.state.confirmPassword) {\r\n      this.setState({\r\n        password: '',\r\n        confirmPassword: ''\r\n      })\r\n      alert(\"passwords dont match\")\r\n    }\r\n  }\r\n\r\n  // Submit and update password\r\n  updatePassword(event) {\r\n    event.preventDefault();\r\n    axios.put('http://localhost:3000/api/updatePassword', {\r\n        email: this.state.email,\r\n        password: this.state.password\r\n    })\r\n    .then(response => {\r\n      console.log('Data from Update Password: ', response.data.message)\r\n      if (response.data.message === 'Password updated') {\r\n        this.setState({\r\n          updated: true,\r\n          error: false\r\n        })\r\n      } else {\r\n        this.setState({\r\n            updated: false,\r\n            error: true\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error.data)\r\n      })\r\n    }\r\n    \r\n    //Clean form after submit\r\n    clear = () =>{\r\n    this.setState({\r\n      email: \"\"\r\n    });\r\n    }\r\n\r\n    // Render password reset form\r\n    render() {\r\n      const {password, confirmPassword, error, isLoading, updated} = this.state;\r\n      /* Password not updated' */\r\n      if (error) {\r\n          return (\r\n              <div className=\"box\">\r\n                  <h1>Password Reset</h1>\r\n                  <div>\r\n                    <p>Problem reseting password. Please try again.</p>\r\n                        <Link to={`/resetpassword`}>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Reset Password</Button>\r\n                        </Link>\r\n                    <p><a className=\"\" href=\"http://localhost:5000/login\">Sign In</a></p>\r\n                  </div>\r\n              </div>\r\n          )\r\n      } else if (isLoading) {\r\n          return (\r\n              <div className=\"box\">\r\n                <h1>Password Reset</h1>\r\n                <p>Loading User Data...</p>\r\n              </div>\r\n          )\r\n      } else {\r\n          return (\r\n            <div className=\"box\">\r\n              <p className=\"title\">Reset Password</p>\r\n\r\n              <Form\r\n              name=\"normal_login\"\r\n              className=\"login-form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n            >\r\n          <div className=\"mb-4 text-center\">\r\n          <span className=\"\">Please insert the new password</span>\r\n          </div>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your Password!',\r\n              },\r\n            ]}\r\n          >\r\n          <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" name=\"password\" placeholder=\"New Password\"  value={password} onChange={this.handleChange}/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirmPassword\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your Password!',\r\n              },\r\n            ]}\r\n          >\r\n          <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\"  value={confirmPassword} onChange={this.handleChange}/>\r\n          </Form.Item>\r\n         \r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.updatePassword}>\r\n              UpdatePassword\r\n            </Button>\r\n          </Form.Item>\r\n    \r\n          {updated && (\r\n              <div>\r\n                <p>Your password has been successfully reset, please try logging in again</p>              \r\n                <Link to={`/login`}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Login</Button>\r\n                </Link>\r\n            </div>\r\n          )}  \r\n        </Form></div>\r\n      );\r\n    }\r\n  };\r\n}  \r\nexport default ResetPassword;\r\n    \r\n    "]},"metadata":{},"sourceType":"module"}