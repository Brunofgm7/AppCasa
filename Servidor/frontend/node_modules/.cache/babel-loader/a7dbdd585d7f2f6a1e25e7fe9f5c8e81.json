{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\ProjetoCasa\\\\frontend\\\\src\\\\components\\\\Item\\\\ItemForm.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Input } from 'antd';\nimport { FormOutlined, FileTextOutlined } from '@ant-design/icons';\nimport { Select } from 'antd';\nimport axios from 'axios'; //Align form (to be configured as needed)\n\nconst layout = {\n  labelCol: {\n    span: 2\n  }\n};\nconst {\n  Option\n} = Select;\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      item = {}\n    } = props;\n    this.state = {\n      item\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleDropChange = this.handleDropChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log('From ItemForm: ', nextProps);\n  } //Input values from the form \n\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleDropChange(event) {\n    console.log(event);\n    this.setState({\n      name: event\n    });\n  } //Submit and create the item\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const item = {\n      name: this.state.name,\n      numero: this.state.numero,\n      stock: this.state.stock,\n      notas: this.state.notas\n    };\n    console.log(\"Final item: \", item); //const {handleSubmit} = this.props;\n\n    axios.post(`http://localhost:3000/api/item`, item, {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(({\n      data: item\n    }) => {\n      console.log('Item updated: ', item);\n      const {\n        history\n      } = this.props;\n      history.push('/item');\n    });\n  }\n\n  handleClose(e) {\n    e.preventDefault();\n    this.props.history.push('/item');\n  }\n\n  render() {\n    //Item attributes\n    const {\n      item: {\n        name,\n        numero,\n        stock,\n        notas\n      }\n    } = this.state; //Attributes received from ItemAdd.js\n\n    const {\n      handleCancel,\n      submitText = 'Create'\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"New item\"), /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Local de Entrega\",\n      rules: [{\n        required: true,\n        message: 'Please input the name!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: name,\n      onChange: this.handleDropChange,\n      showSearch: true,\n      style: {\n        display: 'flex'\n      },\n      placeholder: \"Search to Select\",\n      OptionFilterProp: \"children\",\n      filterOption: (input, Option) => Option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n      filterSort: (OptionA, OptionB) => OptionA.children.toLowerCase().localeCompare(OptionB.children.toLowerCase()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"Baixa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"Baixa\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"Ter\\xE7o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    }, \"Ter\\xE7o\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"Ju\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, \"JU\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"N\\xBA Refei\\xE7\\xF5es\",\n      rules: [{\n        required: true,\n        message: 'Please input the description!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(FileTextOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 37\n        }\n      }),\n      type: \"number\",\n      name: \"numero\",\n      value: numero,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Stock\",\n      rules: [{\n        required: true,\n        message: 'Please input the name!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(FormOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 37\n        }\n      }),\n      type: \"text\",\n      name: \"stock\",\n      value: stock,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Notas\",\n      rules: [{\n        required: true,\n        message: 'Please input the name!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(FormOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 37\n        }\n      }),\n      type: \"text\",\n      name: \"notas\",\n      value: notas,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      key: \"2\",\n      onClick: this.handleClose,\n      type: \"primary\",\n      danger: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      key: \"1\",\n      style: {\n        background: \"green\",\n        marginLeft: \"5px\",\n        borderColor: \"green\",\n        color: \"white\"\n      },\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, submitText))));\n  }\n\n}\n\nexport default ItemForm;","map":{"version":3,"sources":["C:/Projetos/ProjetoCasa/frontend/src/components/Item/ItemForm.js"],"names":["React","Component","Form","Button","Input","FormOutlined","FileTextOutlined","Select","axios","layout","labelCol","span","Option","ItemForm","constructor","props","item","state","handleChange","bind","handleClose","handleDropChange","handleSubmit","componentWillReceiveProps","nextProps","console","log","e","setState","target","name","value","event","preventDefault","numero","stock","notas","post","method","body","JSON","stringify","headers","then","data","history","push","render","handleCancel","submitText","display","justifyContent","required","message","input","children","toLowerCase","indexOf","OptionA","OptionB","localeCompare","background","marginLeft","borderColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button, Input } from 'antd';\r\nimport { FormOutlined, FileTextOutlined } from '@ant-design/icons';\r\nimport { Select } from 'antd';\r\nimport axios from 'axios';\r\n\r\n\r\n//Align form (to be configured as needed)\r\nconst layout = {\r\n    labelCol: {\r\n      span: 2,\r\n    }\r\n  };\r\n\r\n  const { Option } = Select;\r\n\r\nclass ItemForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { item = {}} = props;\r\n        this.state = { \r\n            item\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleDropChange = this.handleDropChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log('From ItemForm: ', nextProps);\r\n    }\r\n\r\n    //Input values from the form \r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleDropChange(event) {\r\n        console.log(event)  \r\n        this.setState({name: event});  }\r\n    \r\n\r\n    //Submit and create the item\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const item = {\r\n            name: this.state.name,\r\n            numero: this.state.numero,\r\n            stock: this.state.stock,\r\n            notas: this.state.notas,\r\n        };\r\n        console.log(\"Final item: \", item)            \r\n        //const {handleSubmit} = this.props;\r\n        axios.post(`http://localhost:3000/api/item`, item,\r\n        {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(({data: item}) => {\r\n            console.log('Item updated: ', item);\r\n            const { history } = this.props;\r\n            history.push('/item');\r\n        });\r\n    } \r\n\r\n    handleClose(e) {\r\n        e.preventDefault();\r\n        this.props.history.push('/item');\r\n    }\r\n\r\n    render() {\r\n        //Item attributes\r\n        const {item: {name, numero, stock, notas} } = this.state;\r\n        //Attributes received from ItemAdd.js\r\n        const {handleCancel, submitText = 'Create'} = this.props;\r\n        return (\r\n            <div>\r\n                <h2 style={{display:'flex', justifyContent: 'center'}}>New item</h2>\r\n                {/*Form to create a new item*/}\r\n                <Form {...layout}>\r\n                    <Form.Item\r\n                        label=\"Local de Entrega\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input the name!',\r\n                        },\r\n                        ]}\r\n                        >\r\n                        <Select \r\n                            value={name} \r\n                            onChange={this.handleDropChange}\r\n                            showSearch\r\n                            style={{ display:'flex' }}\r\n                            placeholder=\"Search to Select\"\r\n                            OptionFilterProp=\"children\"\r\n                            filterOption={(input, Option) =>\r\n                            Option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                            filterSort={(OptionA, OptionB) =>\r\n                            OptionA.children.toLowerCase().localeCompare(OptionB.children.toLowerCase())\r\n                            }>\r\n                            <Option value=\"Baixa\">Baixa</Option>\r\n                            <Option value=\"Terço\">Terço</Option>\r\n                            <Option value=\"Ju\">JU</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Nº Refeições\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input the description!',\r\n                        },\r\n                        ]}\r\n                        ><Input\r\n                            prefix={<FileTextOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"number\"\r\n                            name=\"numero\"\r\n                            value={numero}\r\n                            onChange={this.handleChange} />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Stock\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input the name!',\r\n                        },\r\n                        ]}\r\n                        ><Input\r\n                            prefix={<FormOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"text\"\r\n                            name=\"stock\"\r\n                            value={stock}\r\n                            onChange={this.handleChange}\r\n                            />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Notas\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input the name!',\r\n                        },\r\n                        ]}\r\n                        ><Input\r\n                            prefix={<FormOutlined className=\"site-form-item-icon\" />}\r\n                            type=\"text\"\r\n                            name=\"notas\"\r\n                            value={notas}\r\n                            onChange={this.handleChange}\r\n                            />\r\n                    </Form.Item>\r\n                    <Form.Item className=\"float-right\">\r\n                        {/* Cancel Button */}\r\n                        <Button key=\"2\" onClick={this.handleClose} type=\"primary\" danger>Cancel</Button>\r\n                        {/* Save Button */}\r\n                        <Button key=\"1\" style={{ background: \"green\", marginLeft: \"5px\", borderColor: \"green\", color: \"white\"}} type=\"submit\" onClick={this.handleSubmit}>{submitText}</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemForm;\r\n"]},"metadata":{},"sourceType":"module"}